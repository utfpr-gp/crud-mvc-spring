#muda o nome do contexto
server.servlet.context-path=/crud-mvc
#server.port=8080

#prefixos e sufixos do JSP
spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp

#habilita o devtools a monitorar a pasta /webapp
spring.devtools.restart.additional-paths=.

#filtro que trata do campo _method para operações de Delete enviado via POST via formulário
spring.mvc.hiddenmethod.filter.enabled: true

#********************************
# H2
#********************************
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#persiste os dados em arquivos ao invés de memória
#spring.datasource.url=jdbc:h2:file:/data/demo

#********************************
# JPA
#********************************
spring.jpa.show-sql=true
#O valor pode ser: none, update, create, create-drop
spring.jpa.hibernate.ddl-auto=create

#quando não encontra um tratador de exception, o spring retorna 404.
#com esta configuração, antes de retornar, ele gera o NoHandlerException, que pode ser
#capturado e tratado
spring.mvc.throw-exception-if-no-handler-found=true

#********************************
# Logs
#********************************
# níveis de log disponíveis: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#logging.level.root = DEBUG
#logging.level.org.springframework.web: DEBUG
#logging.level.org.hibernate: ERROR

#********************************
# Persistencia de logs em arquivos
#********************************
#gera o arquivo dentro do diretorio raiz do projeto
#logging.file=my.log
#muda o diretorio de log
#logging.file=/home/my.log




